// <auto-generated />
using System;
using EntertainmentWebApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntertainmentWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntertainmentWebApi.Model.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActGender")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ActName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActGender = "M",
                            ActName = "Ranbir Kapoor"
                        },
                        new
                        {
                            Id = 2,
                            ActGender = "F",
                            ActName = "Alia Bhatt"
                        },
                        new
                        {
                            Id = 3,
                            ActGender = "F",
                            ActName = "Priyanka Chopra"
                        },
                        new
                        {
                            Id = 4,
                            ActGender = "M",
                            ActName = "Amitabh Bacchan"
                        },
                        new
                        {
                            Id = 5,
                            ActGender = "M",
                            ActName = "Ajay Devagan"
                        },
                        new
                        {
                            Id = 6,
                            ActGender = "M",
                            ActName = "Arshad Warsi"
                        },
                        new
                        {
                            Id = 7,
                            ActGender = "M",
                            ActName = "Sharukh Khan"
                        },
                        new
                        {
                            Id = 8,
                            ActGender = "F",
                            ActName = "Pooja Bhatt"
                        });
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Director", b =>
                {
                    b.Property<int>("DirId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirId"));

                    b.Property<string>("DirName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DirId");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            DirId = 101,
                            DirName = "Alia Bhatt"
                        },
                        new
                        {
                            DirId = 102,
                            DirName = "Rohit Shetty"
                        },
                        new
                        {
                            DirId = 103,
                            DirName = "Pooja Bhatt"
                        },
                        new
                        {
                            DirId = 104,
                            DirName = "Sharukh Khan"
                        },
                        new
                        {
                            DirId = 105,
                            DirName = "NTR"
                        },
                        new
                        {
                            DirId = 106,
                            DirName = "Karan Johar"
                        });
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1001,
                            GenreTitle = "Horror"
                        },
                        new
                        {
                            GenreId = 1002,
                            GenreTitle = "Sci-Fiction"
                        },
                        new
                        {
                            GenreId = 1003,
                            GenreTitle = "Comedy"
                        },
                        new
                        {
                            GenreId = 1004,
                            GenreTitle = "Drama"
                        });
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Movie", b =>
                {
                    b.Property<int>("MovId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovId"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("MovLang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("MovRelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovReleaseCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MovYear")
                        .HasColumnType("int");

                    b.Property<int>("actorId")
                        .HasColumnType("int");

                    b.Property<int>("directorId")
                        .HasColumnType("int");

                    b.HasKey("MovId");

                    b.HasIndex("GenreId");

                    b.HasIndex("actorId");

                    b.HasIndex("directorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovId = 801,
                            GenreId = 1002,
                            MovLang = "PAN India",
                            MovRelDate = new DateTime(2024, 2, 5, 15, 31, 0, 917, DateTimeKind.Local).AddTicks(2813),
                            MovReleaseCountry = "Worldwide",
                            MovTitle = "Brahmastra",
                            MovYear = 2024,
                            actorId = 2,
                            directorId = 101
                        },
                        new
                        {
                            MovId = 802,
                            GenreId = 1003,
                            MovLang = "PAN India",
                            MovRelDate = new DateTime(2024, 2, 5, 15, 31, 0, 917, DateTimeKind.Local).AddTicks(2825),
                            MovReleaseCountry = "Worldwide",
                            MovTitle = "RRR",
                            MovYear = 2024,
                            actorId = 5,
                            directorId = 103
                        });
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("MovieId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 201,
                            MovieId = 801,
                            ReviewText = "Rotten tomatotes",
                            ReviewTitle = "1 star"
                        },
                        new
                        {
                            ReviewId = 202,
                            MovieId = 801,
                            ReviewText = "Very Bad movie",
                            ReviewTitle = "1 star"
                        },
                        new
                        {
                            ReviewId = 203,
                            MovieId = 801,
                            ReviewText = "Fantastic movie",
                            ReviewTitle = "4 star"
                        });
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Movie", b =>
                {
                    b.HasOne("EntertainmentWebApi.Model.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntertainmentWebApi.Model.Actor", "Actor")
                        .WithMany("Movies")
                        .HasForeignKey("actorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntertainmentWebApi.Model.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("directorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Director");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Review", b =>
                {
                    b.HasOne("EntertainmentWebApi.Model.Movie", "Movies")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Actor", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("EntertainmentWebApi.Model.Movie", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
